# Docker Buildfile for ComfyUI to use a RX570 / Polaris / gfx803 AMD GPU with ROCm 6.3
# created, build and compiled by Robert Rosenbusch at December 2024
FROM rocm64_gfx803_base:latest


SHELL ["/bin/bash", "-c"]  
ENV COMFYUI_PORT=8188 \
    DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONENCODING==UTF-8 \
    REQS_FILE='requirements.txt' \
    COMMANDLINE_ARGS='' \
    PIP_ROOT_USER_ACTION='ignore' 

###########
### Build PyTorch
###########
WORKDIR /    
ENV PYTORCH_GIT_VERSION="release/2.6"
RUN echo "** Checkout PyTorch: ${PYTORCH_GIT_VERSION} **" && \  
    git clone --recursive https://github.com/ROCm/pytorch.git -b ${PYTORCH_GIT_VERSION} /pytorch && \
    true

WORKDIR /pytorch
RUN echo "** BUILDING PYTORCH *** " && \ 
    python3 --version && \
    dpkg -r --force-depends python3-yaml python3-filelock &&\
    mkdir -p /pytorch/dist && \
    python3 setup.py clean && \
    pip3 install --break-system-packages -r ${REQS_FILE} && \
    python3 tools/amd_build/build_amd.py && \
    python3 setup.py bdist_wheel && \
    pip3 install --break-system-packages dist/torch*.whl && \
    true     

###########
### Build TorchVision
###########
ENV TORCH_GIT_VERSION="release/0.21"
RUN echo "** Checkout Torchvision Version: ${TORCH_GIT_VERSION} ** " && \ 
   git clone https://github.com/pytorch/vision.git -b ${TORCH_GIT_VERSION} /vision && \
   true

WORKDIR /vision
RUN echo "** BUILDING PYTORCH *** " && \ 
    python3 setup.py bdist_wheel && \
    pip install --break-system-packages  dist/torchvision-*.whl && \
    mkdir -p /vision/dist && \
    true

###########
### Build TorchAudio
###########
ENV TORCHAUDIO_GIT_VERSION="v2.6.0"
RUN echo "** Checkout Torchaudio Version: ${TORCHAUDIO_GIT_VERSION} **" && \ 
    git clone https://github.com/pytorch/audio.git -b ${TORCHAUDIO_GIT_VERSION} /audio && \
    true

WORKDIR /audio
RUN echo "** BUILDING Torchaudio **" && \
    python3 setup.py bdist_wheel && \
    pip install --break-system-packages dist/*.whl && \
    true 


######
# End of building pytorch and torchvision WHL-Files
###########

RUN dpkg -r --force-depends python3-wheel python3-xyz && \
    pip install --break-system-packages cmake mkl mkl-include && \
    pip install --break-system-packages --upgrade wheel && \
    true

### Install PyRSMI to monitore the GPU via ComfyUI-Crystools    
RUN git clone https://github.com/ROCm/pyrsmi /pyrsmi && \
    true

WORKDIR /pyrsmi

RUN python3 -m pip install --break-system-packages -e . && \
    true

WORKDIR /    

### Install and Compile ComfyUI, reinstall pytorch and torchvision WHL Files
RUN git clone https://github.com/comfyanonymous/ComfyUI.git /ComfyUI && \
    true

WORKDIR /ComfyUI

RUN touch comfi.sh && \
    echo "MIOPEN_LOG_LEVEL=3 TORCH_ROCM_AOTRITON_ENABLE_EXPERIMENTAL=1  PYTORCH_TUNABLEOP_ENABLED=0  ./venv/bin/python main.py --listen --lowvram --port ${COMFYUI_PORT}  >> /comfy/comfy_rocm63_pt25.log 2>&1" > comfi.sh && \
    chmod +x comfi.sh && \
    true

RUN python3 -m venv venv && \
    ./venv/bin/python3 -m pip install --break-system-packages --upgrade pip && \
    ./venv/bin/pip install --break-system-packages psutil && \
    ./venv/bin/pip install --break-system-packages -r requirements.txt && \
    ./venv/bin/pip uninstall --break-system-packages -y torch torchvision torchaudio && \    
    ./venv/bin/pip install --break-system-packages /pytorch/dist/*.whl && \
    ./venv/bin/pip install --break-system-packages /vision/dist/*.whl && \
    ./venv/bin/pip install --break-system-packages /audio/dist/*.whl && \
    ./venv/bin/python3 -m pip install --break-system-packages -e /pyrsmi/. && \
    ./venv/bin/python3 -m pip uninstall --break-system-packages numpy -y && \
    ./venv/bin/pip install --break-system-packages numpy==1.26.4 && \
    true    

### Install ComfyUI Manager    
WORKDIR /ComfyUI/custom_nodes
RUN git clone https://github.com/ltdrdata/ComfyUI-Manager.git &&\
    true

### Install PyRSMI to ComfyUI-Environment
WORKDIR /ComfyUI    

RUN pip install --break-system-packages psutil && \
    ./venv/bin/pip install --break-system-packages -e /pyrsmi && \
    true
    
ENV args="" 
EXPOSE ${COMFYUI_PORT}

### Use "--lowvram" to get a correct output
# ENTRYPOINT MIOPEN_LOG_LEVEL=3 TORCH_ROCM_AOTRITON_ENABLE_EXPERIMENTAL=1  PYTORCH_TUNABLEOP_ENABLED=0  ./venv/bin/python main.py --listen --lowvram --port ${PORT}  >> /comfy/comfy_rocm63_pt25.log 2>&1

CMD ["/bin/bash","-c"]
