#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 7.24kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/rocm542_gfx803_base:5.4.2
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [ 1/13] FROM docker.io/library/rocm542_gfx803_base:5.4.2
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 3.76kB done
#5 DONE 0.0s

#6 [10/13] RUN echo "** Installing other essential dependencies into venv **" &&     ./.venv/bin/python -m pip install --no-cache-dir     -c .venv/constraints.txt     Cython scipy librosa==0.10.2 pydub>=0.25.1 soundfile>=0.12.1 ffmpeg-python>=0.2.0     tensorboardX Jinja2>=3.1.2 json5 Markdown matplotlib>=3.7.0 matplotlib-inline>=0.1.3     praat-parselmouth>=0.4.2 Pillow>=9.1.1 resampy>=0.4.2 scikit-learn tensorboard     tqdm>=4.63.1 tornado>=6.1 Werkzeug>=2.2.3 uc-micro-py>=1.0.1 sympy>=1.11.1     tabulate>=0.8.10 PyYAML>=6.0 pyasn1>=0.4.8 pyasn1-modules>=0.2.8 fsspec>=2022.11.0     absl-py>=1.2.0 audioread uvicorn>=0.21.1 colorama>=0.4.5 httpx fastapi==0.88     ffmpy==0.3.1 python-dotenv>=1.0.0 av torchcrepe==0.0.23 torchfcpe joblib==1.1.0     numba==0.56.4 llvmlite==0.39.0 fairseq==0.12.2 faiss-cpu==1.7.3 gradio==3.34.0     pyworld==0.3.2     onnxruntime     &&     echo "Essential dependencies installed into venv."
#6 CACHED

#7 [ 2/13] RUN apt-get update -y &&     apt-get install -y --no-install-recommends         aria2         git wget curl ffmpeg     &&     apt-get clean && rm -rf /var/lib/apt/lists/*
#7 CACHED

#8 [ 6/13] RUN echo "** Creating constraints.txt **" &&     export PATH="/opt/rocm/bin:/opt/rocm/hip/bin:/root/.nvm/versions/node/v22.9.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" &&     PYTORCH_WHEEL_FILE_PATH=$(cat /opt/pytorch_wheel_name.txt) &&     TORCHVISION_WHEEL_FILE_PATH=$(cat /opt/torchvision_wheel_name.txt) &&     TORCHAUDIO_WHEEL_FILE_PATH=$(cat /opt/torchaudio_wheel_name.txt) &&     echo "torch @ file://${PYTORCH_WHEEL_FILE_PATH}" > .venv/constraints.txt &&     echo "torchvision @ file://${TORCHVISION_WHEEL_FILE_PATH}" >> .venv/constraints.txt &&     echo "torchaudio @ file://${TORCHAUDIO_WHEEL_FILE_PATH}" >> .venv/constraints.txt &&     echo "numpy==1.23.5" >> .venv/constraints.txt &&     echo "protobuf==4.25.3" >> .venv/constraints.txt &&     echo "matplotlib" >> .venv/constraints.txt &&     echo "joblib==1.1.0" >> .venv/constraints.txt &&     echo "numba==0.56.4" >> .venv/constraints.txt &&     echo "llvmlite==0.39.0" >> .venv/constraints.txt &&     echo "fairseq==0.12.2" >> .venv/constraints.txt &&     echo "faiss-cpu==1.7.3" >> .venv/constraints.txt &&     echo "gradio==3.34.0" >> .venv/constraints.txt &&     echo "pyworld==0.3.2" >> .venv/constraints.txt &&     echo "torchcrepe==0.0.23" >> .venv/constraints.txt &&     echo "torchfcpe" >> .venv/constraints.txt &&     echo "Contents of constraints.txt:" && cat .venv/constraints.txt
#8 CACHED

#9 [ 3/13] WORKDIR /app
#9 CACHED

#10 [ 9/13] RUN echo "** Installing RVC specific dependencies from requirements-amd.txt (cleaned) **" &&     ./.venv/bin/python -m pip install --no-cache-dir -r requirements-amd.txt -c .venv/constraints.txt
#10 CACHED

#11 [ 4/13] RUN echo "Cloning RVC repository..." &&     git clone https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI.git . &&     echo "RVC repository cloned into /app."
#11 CACHED

#12 [ 8/13] RUN echo "** Installing RVC dependencies from main requirements.txt (cleaned) **" &&     ./.venv/bin/python -m pip install --no-cache-dir -r requirements.txt -c .venv/constraints.txt
#12 CACHED

#13 [ 5/13] RUN python3 -m venv .venv # .venv /app altında oluşacak
#13 CACHED

#14 [ 7/13] RUN echo "Processing RVC requirements files" &&     echo "Current directory: $(pwd)" && ls -la &&     if [ ! -f "requirements.txt" ]; then echo "ERROR: requirements.txt NOT FOUND in $(pwd)" >&2; exit 1; fi &&     if [ ! -f "requirements-amd.txt" ]; then echo "ERROR: requirements-amd.txt NOT FOUND in $(pwd)" >&2; exit 1; fi &&     echo "--- Original requirements.txt ---" && cat requirements.txt && echo "--- End ---" &&     echo "--- Original requirements-amd.txt ---" && cat requirements-amd.txt && echo "--- End ---" &&         sed -i -E '/^torch(vision|audio)?\s*(==|>=)?/d' requirements.txt &&     sed -i '/^fairseq @ /d' requirements.txt &&     sed -i '/^extension_/d' requirements.txt &&     sed -i "/; sys_platform 'win32'/d" requirements.txt &&     sed -i "/; sys_platform 'darwin'/d" requirements.txt &&     echo "--- Cleaned main requirements.txt ---" && cat requirements.txt && echo "--- End ---" &&         sed -i -E '/^torch(vision|audio)?\\s*(==|>=)?/d' requirements-amd.txt &&     sed -i '/^tensorflow-rocm/d' requirements-amd.txt &&     sed -i '/^joblib/d' requirements-amd.txt &&     sed -i '/^numba/d' requirements-amd.txt &&     sed -i '/^numpy/d' requirements-amd.txt &&     sed -i '/^scipy/d' requirements-amd.txt &&     sed -i '/^librosa/d' requirements-amd.txt &&     sed -i '/^llvmlite/d' requirements-amd.txt &&     sed -i '/^fairseq/d' requirements-amd.txt &&     sed -i '/^faiss-cpu/d' requirements-amd.txt &&     sed -i '/^gradio/d' requirements-amd.txt &&     sed -i '/^Cython/d' requirements-amd.txt &&     sed -i '/^pyworld/d' requirements-amd.txt &&     sed -i '/^torchcrepe/d' requirements-amd.txt &&     sed -i '/^torchfcpe/d' requirements-amd.txt &&     sed -i '/^onnxruntime/d' requirements-amd.txt &&     sed -i "/; sys_platform 'darwin'/d" requirements-amd.txt &&     echo "--- Cleaned requirements-amd.txt ---" && cat requirements-amd.txt && echo "--- End ---"
#14 CACHED

#15 [11/13] RUN chmod +x *.sh
#15 CACHED

#16 [12/13] COPY entrypoint_rvc.sh /entrypoint_rvc.sh
#16 DONE 0.1s

#17 [13/13] RUN chmod +x /entrypoint_rvc.sh
#17 DONE 0.3s

#18 exporting to image
#18 exporting layers 0.1s done
#18 writing image sha256:a8d8cb25725b02944210726bd0e281a71fc10aa5329eec35d623e0791ca2a0ae done
#18 naming to docker.io/library/rvc_webui_rocm:5.4.2 done
#18 DONE 0.1s
